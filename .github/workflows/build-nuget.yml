name: Publicar paquete NuGet

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - master

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      # 1) Chequear el código
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Setup .NET SDK (por ejemplo, 8.0; modifica según tus needs)
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # 3) Restore dependencias
      - name: Restore dependencies
        run: dotnet restore ./SasUrlGenerator/SasUrlGenerator.csproj

      # 4) Build en modo Release (esto generará el .nupkg si tienes GeneratePackageOnBuild)
      - name: Build and pack
        run: |
          dotnet build ./SasUrlGenerator/SasUrlGenerator.csproj --configuration Release
          # Si no usas GeneratePackageOnBuild, puedes ejecutar:
          # dotnet pack ./SasUrlGenerator/SasUrlGenerator.csproj --configuration Release --no-build --output ./nupkgs

      # 5) Publicar en GitHub Packages
      - name: Publish to GitHub Packages       
        run: |
          nupkg=$(find SasUrlGenerator/bin/Release -maxdepth 2 -name '*.nupkg' | head -n 1)
          echo "Found package: $nupkg"
          dotnet nuget push "$nupkg" \
            --api-key "${{ github.token }}" \
            --source "https://nuget.pkg.github.com/juankmvanegas/index.json"
        env:
          # La fuente “github” está preconfigurada cuando usas actions/setup-dotnet@v3
          # y GITHUB_TOKEN es suficiente para autenticar a GitHub Packages.
          NUGET_XMLDOC_MODE: skip
